USE UNIVER


-- 1е задание
--SELECT AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME 
--	FROM AUDITORIUM INNER JOIN AUDITORIUM_TYPE 
--	ON AUDITORIUM.AUDITORIUM_TYPE  = AUDITORIUM_TYPE.AUDITORIUM_TYPE

-- 2е задание
--SELECT AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME 
--	FROM AUDITORIUM INNER JOIN AUDITORIUM_TYPE 
--	ON AUDITORIUM.AUDITORIUM_TYPE = AUDITORIUM_TYPE.AUDITORIUM_TYPE AND AUDITORIUM_TYPE.AUDITORIUM_TYPENAME LIKE '%компьютер%'

-- 3е задание
--SELECT  T1.AUDITORIUM, T2.AUDITORIUM_TYPENAME 
--		FROM AUDITORIUM AS T1, AUDITORIUM_TYPE AS T2
--		WHERE T1.AUDITORIUM_TYPE = T2.AUDITORIUM_TYPE

--SELECT  T1.AUDITORIUM, T2.AUDITORIUM_TYPENAME 
--		FROM AUDITORIUM AS T1, AUDITORIUM_TYPE AS T2
--		WHERE T1.AUDITORIUM_TYPE = T2.AUDITORIUM_TYPE AND T2.AUDITORIUM_TYPENAME LIKE '%компьютер%'

----4е задание
--SELECT FACULTY.FACULTY_NAME, PULPIT.PULPIT, [SUBJECT].SUBJECT_NAME, STUDENT.[NAME], GROUPS.PROFESSION,
--		CASE
--		WHEN (PROGRESS.NOTE = 6)THEN 'Шесть'
--		WHEN (PROGRESS.NOTE = 7)THEN 'Семь'
--		WHEN (PROGRESS.NOTE = 8)THEN 'Восемь'
--		ELSE 'ASF'
--		END [NOTE]
--		FROM PROGRESS
--		INNER JOIN STUDENT ON PROGRESS.[IDSTUDENT] = STUDENT.[IDSTUDENT]
--		INNER JOIN GROUPS ON STUDENT.IDGROUP = GROUPS.IDGROUP
--		INNER JOIN [SUBJECT] ON PROGRESS.[SUBJECT] = [SUBJECT].[SUBJECT]
--		INNER JOIN [FACULTY] ON GROUPS.[FACULTY] = [FACULTY].[FACULTY]
--		INNER JOIN PULPIT ON  [PULPIT].[PULPIT] = [SUBJECT].[PULPIT]
--		AND (PROGRESS.NOTE BETWEEN 6 AND 8)
--		ORDER BY FACULTY.FACULTY, PULPIT.PULPIT, [SUBJECT].SUBJECT_NAME, STUDENT.NAME, GROUPS.PROFESSION DESC


----5е задание
		
--		SELECT FACULTY.FACULTY_NAME, PULPIT.PULPIT, [SUBJECT].SUBJECT_NAME, STUDENT.[NAME], GROUPS.PROFESSION,
--		CASE
--		WHEN (PROGRESS.NOTE = 6)THEN 'Шесть'
--		WHEN (PROGRESS.NOTE = 7)THEN 'Семь'
--		WHEN (PROGRESS.NOTE = 8)THEN 'Восемь'
--		ELSE 'ASF'
--		END [NOTE]
--		FROM PROGRESS
--		INNER JOIN STUDENT ON PROGRESS.[IDSTUDENT] = STUDENT.[IDSTUDENT]
--		INNER JOIN GROUPS ON STUDENT.IDGROUP = GROUPS.IDGROUP
--		INNER JOIN [SUBJECT] ON PROGRESS.[SUBJECT] = [SUBJECT].[SUBJECT]
--		INNER JOIN [FACULTY] ON GROUPS.[FACULTY] = [FACULTY].[FACULTY]
--		INNER JOIN PULPIT ON  [PULPIT].[PULPIT] = [SUBJECT].[PULPIT]
--		AND (PROGRESS.NOTE BETWEEN 6 AND 8)

--		ORDER BY 
--		( CASE 
--				WHEN (PROGRESS.NOTE = 6) THEN 3
--				WHEN (PROGRESS.NOTE = 8) THEN 2
--				else 1 
--			end
				
--		)

---- 6е задание 
--SELECT PULPIT.[PULPIT_NAME], ISNULL(TEACHER.[TEACHER_NAME],'***')Teacher
--	FROM PULPIT LEFT OUTER JOIN TEACHER
--		ON PULPIT.PULPIT = TEACHER.PULPIT
		
---- 7е задание 
--SELECT PULPIT.[PULPIT_NAME], ISNULL(TEACHER.[TEACHER_NAME],'***')Teacher
--	FROM TEACHER RIGHT OUTER JOIN PULPIT
--		ON PULPIT.PULPIT = TEACHER.PULPIT
---- 8е задание
--select PULPIT.PULPIT, TEACHER.TEACHER_NAME
--from TEACHER full outer join PULPIT
--on PULPIT.PULPIT = TEACHER.PULPIT
--where PULPIT.PULPIT is null

--select PULPIT.PULPIT, isnull(TEACHER.TEACHER_NAME,'***')[Teacher]
--from TEACHER full outer join PULPIT
--on PULPIT.PULPIT = TEACHER.PULPIT
--where TEACHER.PULPIT is null

--select PULPIT.PULPIT, isnull(TEACHER.TEACHER_NAME,'***')[Teacher]
--from PULPIT full outer join TEACHER
--on PULPIT.PULPIT = TEACHER.PULPIT


-- 9е задание

--SELECT AUDITORIUM.AUDITORIUM_TYPE, AUDITORIUM.AUDITORIUM
--	FROM AUDITORIUM CROSS JOIN AUDITORIUM_TYPE 
--	WHERE AUDITORIUM.AUDITORIUM_TYPE  =  AUDITORIUM_TYPE.AUDITORIUM_TYPE	

--11е задание

	--CREATE TABLE TIMETABLE
--(
--IDGROUP  int,
--AUDITORIUM   char(20) not null foreign key references AUDITORIUM(AUDITORIUM), 
--SUBJECT varchar(100),
--TEACHER  varchar(100) not null foreign key references TEACHER(TEACHER_NAME), 
--DAY_OF_WEEK date,
--PAIR int
--);

INSERT into TIMETABLE(IDGROUP, AUDITORIUM, SUBJECT, TEACHER, DAY_OF_WEEK, PAIR)
	values( 1, '236-1', 'БД', 'Акунович Станислав Иванович', '08.04.2022', 2);

SELECT *
	FROM AUDITORIUM 
	left JOIN TIMETABLE 
		on   AUDITORIUM.AUDITORIUM = TIMETABLE.AUDITORIUM
		where timetable.AUDITORIUM is null OR TIMETABLE.PAIR = 2
		